"use client";
// import type { Metadata } from "next";
import "./globals.css";
import useMouse from "@react-hook/mouse-position";
import { motion } from "framer-motion";
import { useRef, useState } from "react";
import "aos/dist/aos.css";

// export const metadata: Metadata = {
//   title: "Ninja",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}) {
  console.log("hjdohohdowd", children);
  const [cursorVariant, setCursorVariant] = useState("default");
  console.log("dsfads");
  const ref = useRef(null);
  const mouse = useMouse(ref, {
    enterDelay: 100,
    leaveDelay: 100,
  });

  let mouseXPosition = 0;
  let mouseYPosition = 0;

  if (mouse.x !== null) {
    mouseXPosition = mouse.clientX;
  }

  if (mouse.y !== null) {
    mouseYPosition = mouse.clientY;
  }

  const variants = {
    default: {
      opacity: 1,
      height: 0,
      width: 0,
      fontSize: "16px",
      backgroundColor: "#18d26f",
      x: mouseXPosition,
      y: mouseYPosition,
      transition: {
        type: "spring",
        mass: 0.6,
      },
    },
    project: {
      opacity: 1,
      backgroundColor: "#fff",
      color: "#000",
      height: 80,
      width: 80,
      fontSize: "18px",
      x: mouseXPosition - 32,
      y: mouseYPosition - 32,
    },
    contact: {
      opacity: 1,
      backgroundColor: "#18d26f",
      color: "#000",
      height: 10,
      width: 10,
      fontSize: "32px",
      x: mouseXPosition - 10,
      y: mouseYPosition - 10,
    },
  };

  const spring = {
    type: "spring",
    stiffness: 500,
    damping: 28,
  };

  function contactEnter() {
    setCursorVariant("contact");
  }

  function contactLeave() {
    setCursorVariant("default");
  }
  return (
    <html lang="en">
      <body ref={ref}>
        <motion.div
          variants={variants}
          className="circle"
          animate={cursorVariant}
          transition={spring}
        ></motion.div>
        <div
          className="contact"
          onMouseEnter={contactEnter}
          onMouseLeave={contactLeave}
        >
          {children}
        </div>
      </body>
    </html>
  );
}
